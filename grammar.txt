S -> IMPORT_STMT
S -> IMPORT_STMT S
S -> IMPORT_STMT SS
S -> SS
SS -> PART SS
PART -> CLASS_STMT
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SENTENCE
SS -> CLASS_STMT
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
SENTENCE -> FUNCTION
SENTENCE -> ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> WITH_STATE
SENTENCE -> IF_BLOCK
SENTENCE -> FOR_STMT
SENTENCE -> SENTENCE ENTER SENTENCE
STRING -> 'STRING'
STRING -> 'MULTILINE'
STRINGFORMAT -> STRING TITIK FORMAT LP ARIT_OP RP
STRINGFORMAT -> STRING TITIK FORMAT LP ID RP
LIST -> LSB PARAM RSB
LIST -> LSB ID FOR PARAM IN ID RSB
LIST -> LSB ID FOR PARAM IN RANGE_STMT RSB
LIST -> LSB ARIT_OP FOR PARAM IN ID RSB 
LIST -> LSB ARIT_OP FOR PARAM IN RANGE_STMT RSB
ARIT_OP -> ID ARIT_OPERATOR ARIT_OP
ARIT_OP -> ID ARIT_OPERATOR ID
ARIT_OP -> LP ARIT_OP RP
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUBTR
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> IDINT
LOGI_ID -> NOT IDINT
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_ID
LOGI_OPERATOR -> ISEQUAL
LOGI_OPERATOR -> LE
LOGI_OPERATOR -> L
LOGI_OPERATOR -> GE
LOGI_OPERATOR -> G
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
LOGI_OPERATOR -> NOT
WITH_STATE -> WITH ID LP PARAMFUNGSI RP AS ID TITIKDUA ENTER SENTENCE 
PARAM -> ALL
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
ID_FUNC -> ID
ID_FUNC -> ID TITIKDUA TIPE
PARAMFUNGSI -> ID_FUNC EQ STATIC
PARAMFUNGSI -> ID_FUNC
PARAMFUNGSI -> ID_FUNC COMMA PARAMFUNGSI
PARAMFUNGSI -> ID_FUNC EQ STATIC COMMA PARAMFUNGSI
STATIC -> INT
STATIC -> STRING
STATIC -> BOOL
METHOD_STMT -> ID LSB IDINT RSB TITIK ID
METHOD_STMT -> ID LSB IDINT RSB TITIK FUNCTION
METHOD_STMT -> KARTITIK LP RP
METHOD_STMT -> KARTITIK LP PARAM RP
METHOD_STMT -> KARTITIK LP PARAMFUNGSI RP
IF_STMT -> IF FUNCTION TITIKDUA ENTER SENTENCE
IF_STMT -> IF METHOD_STMT TITIKDUA ENTER SENTENCE
IF_STMT -> IF LOGI_OP TITIKDUA ENTER SENTENCE
IF_STMT -> IF ID IN ID TIITKDUA ENTER SENTENCE
ELIF_STMT -> ELIF LOGI_OP TITIKDUA ENTER SENTENCE
ELIF_STMT -> ELIF ID IN ID TITIKDUA ENTER SENTENCE
ELSE_STMT -> ELSE TITIKDUA ENTER SENTENCE
ELIF_BANYAK -> ELIF_STMT
ELIF_BANYAK -> ELIF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT 
IF_BLOCK -> IF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
ARRAY -> ID LIST
ASSIGN -> IDINT ASSIGN_OP ASSIGNMENT
ASSIGN -> KARTITIK ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN_OP -> EQ
ASSIGN_OP -> SUBAS
ASSIGN_OP -> MULAS
ASSIGN_OP -> SUMAS
ASSIGN_OP -> DIVAS
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> INT
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
FUNC_STMT -> DEF ID LP PARAMFUNGSI RP TITIKDUA ENTER FUNC_SENTENCE
FUNC_STMT -> DEF ID LP PARAMFUNGSI RP ARROW TIPE TITIKDUA ENTER FUNC_SENTENCE
FUNC_STMT -> DEF ID LP RP TITIKDUA ENTER FUNC_SENTENCE
FUNC_STMT -> DEF ID LP RP ARROW TIPE TITIKDUA ENTER FUNC_SENTENCE
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> RETURN ALL
FUNC_SENTENCE -> PASS
FUNC_SENTENCE -> FUNC_SENTENCE RETURN ALL
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNC_SENTENCE -> IF_BLOCK_FUNC
IF_STMT_FUNC -> IF FUNCTION TITIKDUA FUNC_SENTENCE
IF_STMT_FUNC -> IF METHOD_STMT TITIKDUA FUNC_SENTENCE
IF_STMT_FUNC -> IF LOGI_OP TITIKDUA FUNC_SENTENCE
IF_STMT_FUNC -> IF ID IN ID TIITKDUA FUNC_SENTENCE
ELIF_STMT_FUNC -> ELIF LOGI_OP TITIKDUA FUNC_SENTENCE
ELIF_STMT_FUNC -> ELIF ID IN ID TITIKDUA FUNC_SENTENCE
ELSE_STMT_FUNC -> ELSE TITIKDUA FUNC_SENTENCE
ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC
ELIF_BANYAK_FUNC -> ELIF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC 
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELIF_BANYAK_FUNC ELSE_STMT_FUNC
IF_BLOCK_FUNC -> IF_STMT_FUNC ELSE_STMT_FUNC
FUNCTION -> ID LP RP
FUNCTION -> ID LP PARAM RP
FUNCTION -> ID LP PARAMFUNGSI RP
CLASS_STMT -> CLASS ID TITIKDUA 
WHILE_STMT -> WHILE LOGI_OP TITIKDUA ENTER LOOP_SENTENCE
WHILE_STMT -> WHILE IDINT TITIKDUA ENTER LOOP_SENTENCE
FOR_STMT -> FOR ID IN ID TITIKDUA ENTER LOOP_SENTENCE
FOR_STMT -> FOR ID IN RANGE LP PARAM RP TITIKDUA ENTER LOOP_SENTENCE
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
IMPORT_STMT -> IMPORT ID AS ID
IMPORT_STMT -> FROM ID IMPORT ID
IMPORT_STMT -> IMPORT ID
RANGE_STMT -> RANGE LP IDINT RP
RANGE_STMT -> RANGE LP IDINT COMMA IDINT RP
RANGE_STMT -> RANGE LP IDINT TITIKDUA IDINT TITIKDUA IDINT RP
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
IDINT -> ID
IDINT -> INT
ALL -> IDINT
ALL -> BOOL
ALL -> STRING
BOOL -> TRUE
BOOL -> FALSE
EQ -> 'EQ'
ISEQUAL -> 'ISEQUAL'
LP -> 'LP'
RP -> 'RP'
SC -> 'SC'
TITIKDUA -> 'TITIKDUA'
ADD -> 'ADD'
SUBTR -> 'SUBTR'
MUL -> 'MUL'
DIV -> 'DIV'
LE -> 'LE'
L -> 'L'
GE -> 'GE'
G -> 'G'
NEQ -> 'NEQ'
SUBAS -> 'SUBAS'
MULAS -> 'MULAS'
SUMAS -> 'SUMAS'
DIVAS -> 'DIVAS'
AND -> 'AND'
OR -> 'OR'
NOT -> 'NOT'
IF -> 'IF'
THEN -> 'THEN'
ELSE -> 'ELSE'
ELIF -> 'ELIF'
WHILE -> 'WHILE'
RANGE -> 'RANGE'
FALSE -> 'FALSE'
TRUE -> 'TRUE'
NONE -> 'NONE'
BREAK -> 'BREAK'
AS -> 'AS'
CLASS -> 'CLASS'
CONTINUE -> 'CONTINUE'
DEF -> 'DEF'
FOR -> 'FOR'
FROM -> 'FROM'
FORMAT -> 'FORMAT'
IMPORT -> 'IMPORT'
IN -> 'IN'
IS -> 'IS'
RETURN -> 'RETURN'
RAISE -> 'RAISE'
PASS -> 'PASS'
WITH -> 'WITH'
COMMA -> 'COMMA'
KARTITIK -> 'KARTITIK'
TITIK -> 'TITIK'
PETIKSATU -> 'PETIKSATU'
PETIKDUA -> 'PETIKDUA'
LSB -> 'LSB'
RSB -> 'RSB'
LCB -> 'LCB'
RCB -> 'RCB'
INT -> 'INT'
ID -> 'ID'
NEWLINE -> 'NEWLINE'
TIPE -> 'TIPE'
ARROW -> 'ARROW'